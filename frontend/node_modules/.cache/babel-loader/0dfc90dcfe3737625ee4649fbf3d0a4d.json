{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware,compose}from\"redux\";import thunk from\"redux-thunk\";import sessionReducer from'./session';var rootReducer=combineReducers({session:sessionReducer});var enhancer;if(process.env.NODE_ENV===\"production\"){enhancer=applyMiddleware(thunk);}else{var logger=require(\"redux-logger\").default;var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;enhancer=composeEnhancers(applyMiddleware(thunk,logger));}var configureStore=function configureStore(preloadedState){return createStore(rootReducer,preloadedState,enhancer);};export default configureStore;","map":{"version":3,"sources":["/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","sessionReducer","rootReducer","session","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,CAAwDC,OAAxD,KAAuE,OAAvE,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,WAA3B,CAIA,GAAMC,CAAAA,WAAW,CAAGL,eAAe,CAAC,CAClCM,OAAO,CAAEF,cADyB,CAAD,CAAnC,CAIA,GAAIG,CAAAA,QAAJ,CAEA,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzCH,QAAQ,CAAGN,eAAe,CAACE,KAAD,CAA1B,CACD,CAFD,IAEO,CACL,GAAMQ,CAAAA,MAAM,CAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC,CACA,GAAMC,CAAAA,gBAAgB,CACpBC,MAAM,CAACC,oCAAP,EAA+Cd,OADjD,CAEAK,QAAQ,CAAGO,gBAAgB,CAACb,eAAe,CAACE,KAAD,CAAQQ,MAAR,CAAhB,CAA3B,CACD,CAED,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,cAAD,CAAoB,CACzC,MAAOnB,CAAAA,WAAW,CAACM,WAAD,CAAca,cAAd,CAA8BX,QAA9B,CAAlB,CACD,CAFD,CAIA,cAAeU,CAAAA,cAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sessionReducer from './session';\n\n\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}