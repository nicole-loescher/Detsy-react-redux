{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sessionReducer from './session';\nimport product from './product';\nimport productReducer from \"./product\";\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  product: productReducer\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","sessionReducer","product","productReducer","rootReducer","session","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AAIA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCQ,EAAAA,OAAO,EAAEJ,cADyB;AAElCC,EAAAA,OAAO,EAAEC;AAFyB,CAAD,CAAnC;AAKA,IAAIG,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAGR,eAAe,CAACE,KAAD,CAA1B;AACD,CAFD,MAEO;AACL,QAAMU,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+ChB,OADjD;AAEAO,EAAAA,QAAQ,GAAGO,gBAAgB,CAACf,eAAe,CAACE,KAAD,EAAQU,MAAR,CAAhB,CAA3B;AACD;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;AACzC,SAAOrB,WAAW,CAACQ,WAAD,EAAca,cAAd,EAA8BX,QAA9B,CAAlB;AACD,CAFD;;AAIA,eAAeU,cAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sessionReducer from './session';\nimport product from './product'\nimport productReducer from \"./product\";\n\n\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  product: productReducer\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}