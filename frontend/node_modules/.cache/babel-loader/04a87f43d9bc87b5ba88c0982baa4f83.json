{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nicolelolo/Desktop/authenticate-me/frontend/src/components/SignupFormPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport './Signup.css';\n\nfunction SignupFormPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 29\n  }, this);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      setErrors([]);\n      return dispatch(sessionActions.signup({\n        email,\n        username,\n        password\n      })).catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n    }\n\n    return setErrors(['Confirm Password field must be the same as the Password field']);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignupFormPage, \"nDllBLrW0cnvUKOU7N4GYXsBR74=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SignupFormPage;\nexport default SignupFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupFormPage\");","map":{"version":3,"sources":["/Users/nicolelolo/Desktop/authenticate-me/frontend/src/components/SignupFormPage/index.js"],"names":["React","useState","useDispatch","useSelector","Redirect","sessionActions","Button","Container","SignupFormPage","dispatch","sessionUser","state","session","user","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","handleSubmit","e","preventDefault","signup","catch","res","data","map","error","idx","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport './Signup.css'\n\nfunction SignupFormPage() {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    \n    if (sessionUser) return <Redirect to=\"/\" />;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (password === confirmPassword) {\n            setErrors([]);\n            return dispatch(sessionActions.signup({ email, username, password }))\n                .catch(res => {\n                    if (res.data && res.data.errors) setErrors(res.data.errors);\n                });\n        }\n        return setErrors(['Confirm Password field must be the same as the Password field']);\n    };\n\n    return (\n    <Container>\n        <form onSubmit={handleSubmit}>\n            <ul>\n                {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <label>\n                Email\n        <input\n                    type=\"text\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                    />\n            </label>\n            <label>\n                Username\n        <input\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                    />\n            </label>\n            <label>\n                Password\n        <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    />\n            </label>\n            <label>\n                Confirm Password\n        <input\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                    />\n            </label>\n            <Button type=\"submit\">Sign Up</Button>\n        </form>\n    </Container>\n    );\n}\n\nexport default SignupFormPage;"]},"metadata":{},"sourceType":"module"}