{"ast":null,"code":"const SET_PRODUCT = 'product/SET_PRODUCT';\nexport const setProduct = products => ({\n  type: SET_PRODUCT,\n  products\n});\nexport const getProduct = () => async dispatch => {\n  const res = await fetch(`/api/products`);\n\n  if (res.ok) {\n    const products = await res.json();\n    dispatch(setProduct(products));\n  }\n\n  ;\n};\nexport const getOneProduct = id => async dispatch => {\n  const res = await fetch(`/api/products/${id}`);\n\n  if (res.ok) {\n    const product = await res.json();\n    dispatch(setProduct(product));\n  }\n\n  ;\n};\nconst initState = {\n  products: []\n};\n\nconst productReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SET_PRODUCT:\n      {\n        const allProducts = {};\n        action.products.forEach(product => {\n          allProducts[product.id] = product;\n        });\n        return { ...allProducts,\n          ...state,\n          payload: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;","map":{"version":3,"sources":["/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/product.js"],"names":["SET_PRODUCT","setProduct","products","type","getProduct","dispatch","res","fetch","ok","json","getOneProduct","id","product","initState","productReducer","state","action","allProducts","forEach","payload"],"mappings":"AAAA,MAAMA,WAAW,GAAG,qBAApB;AAEA,OAAO,MAAMC,UAAU,GAAIC,QAAD,KAAe;AACrCC,EAAAA,IAAI,EAAEH,WAD+B;AAErCE,EAAAA;AAFqC,CAAf,CAAnB;AAKP,OAAO,MAAME,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAiB;AAC7C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,eAAF,CAAvB;;AAEA,MAAGD,GAAG,CAACE,EAAP,EAAU;AACN,UAAMN,QAAQ,GAAG,MAAMI,GAAG,CAACG,IAAJ,EAAvB;AACAJ,IAAAA,QAAQ,CAACJ,UAAU,CAACC,QAAD,CAAX,CAAR;AACH;;AAAA;AACJ,CAPM;AASP,OAAO,MAAMQ,aAAa,GAAIC,EAAD,IAAQ,MAAMN,QAAN,IAAkB;AACnD,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,iBAAgBI,EAAG,EAArB,CAAvB;;AAEA,MAAGL,GAAG,CAACE,EAAP,EAAU;AACN,UAAMI,OAAO,GAAG,MAAMN,GAAG,CAACG,IAAJ,EAAtB;AACAJ,IAAAA,QAAQ,CAACJ,UAAU,CAACW,OAAD,CAAX,CAAR;AACH;;AAAA;AACJ,CAPM;AASP,MAAMC,SAAS,GAAG;AACdX,EAAAA,QAAQ,EAAE;AADI,CAAlB;;AAIA,MAAMY,cAAc,GAAI,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA+B;AACnD,UAAQA,MAAM,CAACb,IAAf;AACI,SAAKH,WAAL;AAAkB;AACd,cAAMiB,WAAW,GAAG,EAApB;AACAD,QAAAA,MAAM,CAACd,QAAP,CAAgBgB,OAAhB,CAAwBN,OAAO,IAAI;AAC/BK,UAAAA,WAAW,CAACL,OAAO,CAACD,EAAT,CAAX,GAA0BC,OAA1B;AACH,SAFD;AAGA,eAAO,EACH,GAAGK,WADA;AAEH,aAAGF,KAFA;AAGHI,UAAAA,OAAO,EAAEH,MAAM,CAACG;AAHb,SAAP;AAKH;;AACD;AACI,aAAOJ,KAAP;AAbR;AAeH,CAhBD;;AAiBA,eAAeD,cAAf","sourcesContent":["const SET_PRODUCT = 'product/SET_PRODUCT';\n\nexport const setProduct = (products) => ({\n    type: SET_PRODUCT,\n    products\n});\n\nexport const getProduct = () => async dispatch =>{\n    const res = await fetch(`/api/products`);\n\n    if(res.ok){\n        const products = await res.json();\n        dispatch(setProduct(products));\n    };\n};\n\nexport const getOneProduct = (id) => async dispatch => {\n    const res = await fetch(`/api/products/${id}`);\n\n    if(res.ok){\n        const product = await res.json();\n        dispatch(setProduct(product));\n    };\n};\n\nconst initState = {\n    products: []\n}\n\nconst productReducer =  (state = initState, action) => {\n    switch( action.type ){\n        case SET_PRODUCT: {\n            const allProducts = {};\n            action.products.forEach(product => {\n                allProducts[product.id] = product;\n            })\n            return {\n                ...allProducts,\n                ...state,\n                payload: action.payload\n            }\n        }\n        default:\n            return state;\n    }\n}\nexport default productReducer;"]},"metadata":{},"sourceType":"module"}