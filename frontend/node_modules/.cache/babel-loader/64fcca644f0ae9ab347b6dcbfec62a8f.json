{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nicolelolo/Desktop/authenticate-me/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nicolelolo/Desktop/authenticate-me/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Cookies from'js-cookie';export function fetch(_x){return _fetch.apply(this,arguments);}function _fetch(){_fetch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var options,res,contentType,data,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:options=_args.length>1&&_args[1]!==undefined?_args[1]:{};options.method=options.method||'GET';options.headers=options.headers||{};if(options.method.toUpperCase()!=='GET'){options.headers['Content-Type']=options.headers['Content-Type']||'application/json';options.headers['XSRF-Token']=Cookies.get('XSRF-TOKEN');}_context.next=6;return window.fetch(url,options);case 6:res=_context.sent;contentType=res.headers.get('content-type');if(!(contentType&&contentType.includes('application/json'))){_context.next=13;break;}_context.next=11;return res.json();case 11:data=_context.sent;res.data=data;case 13:if(!(res.status>=400)){_context.next=15;break;}throw res;case 15:return _context.abrupt(\"return\",res);case 16:case\"end\":return _context.stop();}}},_callee);}));return _fetch.apply(this,arguments);}export function restoreCSRF(){return fetch('/api/csrf/restore');}","map":{"version":3,"sources":["/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/csrf.js"],"names":["Cookies","fetch","url","options","method","headers","toUpperCase","get","window","res","contentType","includes","json","data","status","restoreCSRF"],"mappings":"+UAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CAEA,eAAsBC,CAAAA,KAAtB,0C,iFAAO,iBAAqBC,GAArB,mKAA0BC,OAA1B,+CAAoC,EAApC,CACHA,OAAO,CAACC,MAAR,CAAiBD,OAAO,CAACC,MAAR,EAAkB,KAAnC,CACAD,OAAO,CAACE,OAAR,CAAkBF,OAAO,CAACE,OAAR,EAAmB,EAArC,CAEA,GAAIF,OAAO,CAACC,MAAR,CAAeE,WAAf,KAAiC,KAArC,CAA4C,CACxCH,OAAO,CAACE,OAAR,CAAgB,cAAhB,EACIF,OAAO,CAACE,OAAR,CAAgB,cAAhB,GAAmC,kBADvC,CAEAF,OAAO,CAACE,OAAR,CAAgB,YAAhB,EAAgCL,OAAO,CAACO,GAAR,CAAY,YAAZ,CAAhC,CACH,CARE,sBAUeC,CAAAA,MAAM,CAACP,KAAP,CAAaC,GAAb,CAAkBC,OAAlB,CAVf,QAUGM,GAVH,eAWGC,WAXH,CAWiBD,GAAG,CAACJ,OAAJ,CAAYE,GAAZ,CAAgB,cAAhB,CAXjB,MAaCG,WAAW,EAAIA,WAAW,CAACC,QAAZ,CAAqB,kBAArB,CAbhB,kDAcoBF,CAAAA,GAAG,CAACG,IAAJ,EAdpB,SAcOC,IAdP,eAeCJ,GAAG,CAACI,IAAJ,CAAWA,IAAX,CAfD,aAkBCJ,GAAG,CAACK,MAAJ,EAAc,GAlBf,gCAkB0BL,CAAAA,GAlB1B,yCAoBIA,GApBJ,yD,wCAsBP,MAAO,SAASM,CAAAA,WAAT,EAAuB,CAC1B,MAAOd,CAAAA,KAAK,CAAC,mBAAD,CAAZ,CACH","sourcesContent":["import Cookies from 'js-cookie';\n\nexport async function fetch(url, options = {}) {\n    options.method = options.method || 'GET';\n    options.headers = options.headers || {};\n\n    if (options.method.toUpperCase() !== 'GET') {\n        options.headers['Content-Type'] =\n            options.headers['Content-Type'] || 'application/json';\n        options.headers['XSRF-Token'] = Cookies.get('XSRF-TOKEN');\n    }\n\n    const res = await window.fetch(url, options);\n    const contentType = res.headers.get('content-type');\n\n    if (contentType && contentType.includes('application/json')) {\n        const data = await res.json();\n        res.data = data;\n    }\n\n    if (res.status >= 400) throw res;\n\n    return res;\n}\nexport function restoreCSRF() {\n    return fetch('/api/csrf/restore');\n}\n"]},"metadata":{},"sourceType":"module"}