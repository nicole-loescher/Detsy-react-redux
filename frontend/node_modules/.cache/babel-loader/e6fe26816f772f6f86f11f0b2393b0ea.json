{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nicolelolo/Desktop/authenticate-me/frontend/src/context/Modal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext();\nexport function ModalProvider({\n  children\n}) {\n  _s();\n\n  const modalRef = useRef();\n  const [value, setValue] = useState();\n  useEffect(() => {\n    setValue(modalRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: modalRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalProvider, \"i6HOJqu5yq2tc6Wl1c4fhpWCZvU=\");\n\n_c = ModalProvider;\nexport function Modal({\n  onclose,\n  children\n}) {\n  _s2();\n\n  const modalNode = useContext(ModalContext);\n  if (!modalNode) return null;\n  return ReactDom.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-background\",\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-content\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this), modalNode);\n}\n\n_s2(Modal, \"rEs01pJvqyy8urmzZRee6stWd98=\");\n\n_c2 = Modal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalProvider\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["/Users/nicolelolo/Desktop/authenticate-me/frontend/src/context/Modal.js"],"names":["React","useContext","useEffect","useRef","useState","ModalContext","createContext","ModalProvider","children","modalRef","value","setValue","current","Modal","onclose","modalNode","ReactDom","createPortal","onClose"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;AAEA,MAAMC,YAAY,gBAAGL,KAAK,CAACM,aAAN,EAArB;AAEA,OAAO,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAAA;;AACxC,QAAMC,QAAQ,GAAGN,MAAM,EAAvB;AACA,QAAM,CAAEO,KAAF,EAASC,QAAT,IAAsBP,QAAQ,EAApC;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,QAAQ,CAACF,QAAQ,CAACG,OAAV,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAEF,KAA9B;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,GAAG,EAAEC;AAAV;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAQH;;GAhBeF,a;;KAAAA,a;AAkBhB,OAAO,SAASM,KAAT,CAAe;AAAEC,EAAAA,OAAF;AAAWN,EAAAA;AAAX,CAAf,EAAsC;AAAA;;AACzC,QAAMO,SAAS,GAAGd,UAAU,CAACI,YAAD,CAA5B;AACA,MAAG,CAACU,SAAJ,EAAe,OAAO,IAAP;AAEf,SAAOC,QAAQ,CAACC,YAAT,eACH;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,kBAAR;AAA2B,MAAA,OAAO,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA,gBACKV;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,EAOHO,SAPG,CAAP;AASH;;IAbeF,K;;MAAAA,K","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\n\nconst ModalContext = React.createContext()\n\nexport function ModalProvider({ children }) {\n    const modalRef = useRef();\n    const [ value, setValue ] = useState();\n\n    useEffect(()=>{\n        setValue(modalRef.current);\n    }, [])\n\n    return (\n        <>\n            <ModalContext.Provider value={value}>\n                {children}\n            </ModalContext.Provider>\n            <div ref={modalRef} />\n        </>\n    )\n}\n\nexport function Modal({ onclose, children }) {\n    const modalNode = useContext(ModalContext);\n    if(!modalNode) return null;\n\n    return ReactDom.createPortal(\n        <div id=\"modal\">\n            <div id=\"modal-background\" onClick={onClose} />\n            <div id=\"modal-content\">\n                {children}\n            </div>\n        </div>,\n        modalNode \n    )\n}"]},"metadata":{},"sourceType":"module"}