{"ast":null,"code":"import { fetch } from './csrf';\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = user => {\n  return {\n    type: SET_USER,\n    payload: user\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER\n  };\n};\n\nexport const login = user => async dispatch => {\n  const {\n    credential,\n    password\n  } = user;\n  const response = await fetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  dispatch(setUser(response.data.user));\n  return response;\n};\nexport const restoreUser = () => async dispatch => {\n  const response = await fetch('/api/session');\n  dispatch(setUser(response.data.user));\n  return response;\n};\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password\n  } = user;\n  const response = await fetch('/api/users', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  dispatch(setUser(response.data.user));\n  return response;\n};\nexport const logout = user => async dispatch => {\n  const response = await fetch('/api/session', {\n    method: 'delete'\n  });\n  dispatch(removeUser());\n  return response;\n};\nconst initialState = {\n  user: null\n};\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;","map":{"version":3,"sources":["/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/session.js"],"names":["fetch","SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","login","dispatch","credential","password","response","method","body","JSON","stringify","data","restoreUser","signup","username","email","headers","logout","initialState","sessionReducer","state","action","newState","Object","assign"],"mappings":"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","sourcesContent":["import { fetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n    return {\n        type: SET_USER,\n        payload: user,\n    };\n};\n\nconst removeUser = () => {\n    return {\n        type: REMOVE_USER,\n    };\n};\n\nexport const login = (user) => async (dispatch) => {\n    const { credential, password } = user;\n    const response = await fetch('/api/session', {\n        method: 'POST',\n        body: JSON.stringify({\n            credential,\n            password,\n        }),\n    });\n    dispatch(setUser(response.data.user));\n    return response;\n};\n\nexport const restoreUser = () => async dispatch => {\n    const response = await fetch('/api/session')\n    dispatch(setUser(response.data.user))\n    return response;\n};\nexport const signup = (user) => async dispatch => {\n    const { username, email, password } = user;\n    const response = await fetch('/api/users', {\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username,\n            email,\n            password\n        })\n    })\n    dispatch(setUser(response.data.user));\n    return response;\n};\n\nexport const logout = user => async dispatch => {\n    const response = await fetch('/api/session', {\n        method: 'delete',\n    })\n    dispatch(removeUser());\n    return response;\n}\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case SET_USER:\n            newState = Object.assign({}, state);\n            newState.user = action.payload;\n            return newState;\n        case REMOVE_USER:\n            newState = Object.assign({}, state);\n            newState.user = null;\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default sessionReducer;"]},"metadata":{},"sourceType":"module"}