{"version":3,"sources":["components/Home/index.js","store/csrf.js","store/session.js","components/Navigation/ProfileButton.js","context/Modal.js","components/LoginFormModal/LoginForm.js","components/LoginFormModal/index.js","components/images/d20-logo.png","components/Navigation/index.js","components/SignupFormPage/index.js","App.js","store/index.js","index.js"],"names":["Home","className","fetch","url","a","options","method","headers","toUpperCase","Cookies","get","window","res","contentType","includes","json","data","status","SET_USER","REMOVE_USER","setUser","user","type","payload","initialState","sessionReducer","newState","state","action","Object","assign","ProfileButton","dispatch","useDispatch","useState","showMenu","setShowMenu","useEffect","closeMenu","console","log","document","addEventListener","removeEventListener","onClick","username","email","e","preventDefault","response","ModalContext","React","createContext","ModalProvider","children","modalRef","useRef","value","setValue","current","Provider","ref","Modal","onClose","modalNode","useContext","ReactDOM","createPortal","id","LoginForm","setShowModal","showModal","credential","setCredential","password","setPassword","errors","setErrors","Container","onSubmit","body","JSON","stringify","catch","map","error","idx","onChange","target","required","placeholder","to","LoginFormModal","Navigation","sessionLinks","isLoaded","sessionUser","useSelector","session","exact","src","logoPhoto","SignupFormPage","setEmail","setUsername","confirmPassword","setConfirmPassword","useHistory","Button","App","enhancer","setIsLoaded","then","path","rootReducer","combineReducers","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ea79773.chunk.js","sourcesContent":["import './Home.css'\nexport function Home() {\n\n    return (\n        <div>\n            <h2 className='home__title'> \n                Welcome to Detsy\n                <p className='home__intro'>Its not hording if they are dice... </p>\n            </h2>\n            <h2 className='home__noinfo'>Oh no... it looks like our dice may have rolled away! Ill go find some more!</h2>\n\n        </div>\n    )\n}","import Cookies from 'js-cookie';\n\nexport async function fetch(url, options = {}) {\n    options.method = options.method || 'GET';\n    options.headers = options.headers || {};\n\n    if (options.method.toUpperCase() !== 'GET') {\n        options.headers['Content-Type'] =\n            options.headers['Content-Type'] || 'application/json';\n        options.headers['XSRF-Token'] = Cookies.get('XSRF-TOKEN');\n    }\n\n    const res = await window.fetch(url, options);\n    const contentType = res.headers.get('content-type');\n\n    if (contentType && contentType.includes('application/json')) {\n        const data = await res.json();\n        res.data = data;\n    }\n\n    if (res.status >= 400) throw res;\n\n    return res;\n}\nexport function restoreCSRF() {\n    return fetch('/api/csrf/restore');\n}\n","import { fetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n    return {\n        type: SET_USER,\n        payload: user,\n    };\n};\n\nconst removeUser = () => {\n    return {\n        type: REMOVE_USER,\n    };\n};\n\nexport const login = (user) => async (dispatch) => {\n    const { credential, password } = user;\n    const response = await fetch('/api/session', {\n        method: 'POST',\n        body: JSON.stringify({\n            credential,\n            password,\n        }),\n    });\n    dispatch(setUser(response.data.user));\n    return response;\n};\n\nexport const restoreUser = () => async dispatch => {\n    const response = await fetch('/api/session')\n    dispatch(setUser(response.data.user))\n    return response;\n};\nexport const signup = (user) => async dispatch => {\n    const { username, email, password } = user;\n    const response = await fetch('/api/users', {\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username,\n            email,\n            password\n        })\n    })\n    dispatch(setUser(response.data.user));\n    return response;\n};\n\nexport const logout = user => async dispatch => {\n    const response = await fetch('/api/session', {\n        method: 'delete',\n    })\n    dispatch(removeUser());\n    return response;\n}\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case SET_USER:\n            newState = Object.assign({}, state);\n            newState.user = action.payload;\n            return newState;\n        case REMOVE_USER:\n            newState = Object.assign({}, state);\n            newState.user = null;\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default sessionReducer;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport * as sessionActions from '../../store/session';\nimport Container from 'react-bootstrap/Container'\n\nfunction ProfileButton({ user }) {\n    const dispatch = useDispatch();\n    const [showMenu, setShowMenu] = useState(false);\n\n    const openMenu = () => {\n        if (showMenu) return;\n        setShowMenu(true);\n    };\n\n    useEffect(() => {\n        if (!showMenu) return;\n\n        const closeMenu = () => {\n            console.log('hit')\n            setShowMenu(false);\n        };\n\n        document.addEventListener('click', closeMenu);\n\n        return () => document.removeEventListener(\"click\", closeMenu);\n    }, [showMenu]);\n\n    const logout = (e) => {\n        e.preventDefault();\n        dispatch(sessionActions.logout());\n    };\n\n    return (\n        <>\n            <button onClick={openMenu}>\n                <i className=\"fas fa-user-circle\" />\n            </button>\n            {showMenu && (\n                <ul className=\"profile-dropdown\">\n                    <li>{user.username}</li>\n                    <li>{user.email}</li>\n                    <li>\n                        <button onClick={logout}>Log Out</button>\n                    </li>\n                </ul>\n            )}\n        </>\n    );\n}\n\nexport default ProfileButton;","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport './Modal.css';\n\nconst ModalContext = React.createContext()\n\nexport function ModalProvider({ children }) {\n    const modalRef = useRef();\n    const [ value, setValue ] = useState();\n\n    useEffect(()=>{\n        setValue(modalRef.current);\n    }, [])\n\n    return (\n        <>\n            <ModalContext.Provider value={value}>\n                {children}\n            </ModalContext.Provider>\n            <div ref={modalRef} />\n        </>\n    )\n}\n\nexport function Modal({ onClose, children }) {\n    const modalNode = useContext(ModalContext);\n    if(!modalNode) return null;\n\n    return ReactDOM.createPortal(\n        <div id=\"modal\">\n            <div id=\"modal-background\" onClick={onClose} />\n            <div id=\"modal-content\">\n                {children}\n            </div>\n        </div>,\n        modalNode \n    )\n}","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as sessionActions from \"../../store/session\";\nimport Container from 'react-bootstrap/Container';\nimport { Link } from \"react-router-dom\";\n\nfunction LoginForm({ setShowModal, showModal }){\n    const dispatch = useDispatch();\n    const [credential, setCredential] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setErrors([]);\n        return dispatch(sessionActions.login({credential, password})).catch(\n            res => {\n                if (res.data && res.data.errors) setErrors(res.data.errors)\n            }\n        )\n    }\n\n    return (\n        <Container className='signup'>\n            <h1 className='signup__header'>Log in, and play!</h1>\n            <form className='signup__form' onSubmit={handleSubmit}>\n                <ul>\n                    {errors.map((error, idx) => (\n                        <li className='signup__error' key={idx}>{error}</li>\n                        ))}\n                </ul>\n            <input\n                        type=\"text\"\n                        value={credential}\n                        onChange={(e) => setCredential(e.target.value)}\n                        required\n                        placeholder='Email or Username'\n                    />\n            <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                        placeholder='Password'\n                        />\n                <button className='signup__submit' type=\"submit\">Log In</button>\n                <Link to='/' className='signup__cancel' onClick={(showModal) => setShowModal(!showModal)} >Cancel</Link>\n            </form>\n        </Container>\n    );\n}\n\nexport default LoginForm;","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Modal } from '../../context/Modal';\nimport LoginForm from './LoginForm';\nimport '../SignupFormPage/Signup.css'\n\n\nfunction LoginFormModal() {\n    const [showModal, setShowModal] = useState()\n\n    return (\n        <>\n            <button onClick={()=> setShowModal(true)}>Log In</button>\n            {showModal && (\n                <Modal onClick={() => setShowModal(false)}>\n                    {/* <Link to='/' className='login__cancel' onClick={() => setShowModal(false)}>Cancel</Link> */}\n                    <LoginForm showModal={showModal} setShowModal={setShowModal} />\n                </Modal>   \n            )}\n        </>\n    )\n}\n\nexport default LoginFormModal;","export default __webpack_public_path__ + \"static/media/d20-logo.d422f61d.png\";","import Breadcrumb from 'react-bootstrap/Breadcrumb'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport { NavLink } from 'react-router-dom'\nimport ProfileButton from './ProfileButton';\nimport { useSelector } from 'react-redux';\nimport LoginFormModal from '../LoginFormModal';\nimport Container from 'react-bootstrap/Container';\nimport './Navigation.css';\nimport logoPhoto from '../images/d20-logo.png';\n\nexport function Navigation({isLoaded}){\n    const sessionUser = useSelector(state => state.session.user)\n\n    let sessionLinks;\n    if(sessionUser) {\n        sessionLinks = (\n            <ProfileButton user={sessionUser} />\n        );\n    }\n    else {\n        sessionLinks = (\n            <>\n                <LoginFormModal />\n                <NavLink className='nav__signup' to='/signup'>Sign Up</NavLink>\n            </>\n        )\n    }\n    return (\n        <nav>\n            <ul className='nav'>\n                <li>\n                     <NavLink to='/' exact>\n                        <div className='nav__logo'>\n                            <img className='nav__logo--photo ' src={logoPhoto} />\n                            <h2 className='nav__logo--title'>Detsy\n                                <p className='nav__logo--snip'>Where the good times roll.</p>\n                            </h2>\n                        </div>\n                    </NavLink>\n                </li>\n                <li>\n                    <div className='nav__form'>\n                        {isLoaded && sessionLinks}\n                    </div>\n                </li>\n            </ul>\n        </nav>\n\n    )\n\n}","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport './Signup.css'\n\nfunction SignupFormPage() {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const history = useHistory();\n    \n    if (sessionUser) return <Redirect to=\"/\" />;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (password === confirmPassword) {\n            setErrors([]);\n            return dispatch(sessionActions.signup({ email, username, password }))\n                .catch(res => {\n                    if (res.data && res.data.errors) setErrors(res.data.errors);\n                });\n        }\n        return setErrors(['Confirm Password field must be the same as the Password field']);\n    };\n\n    return (\n    <Container className='signup'>\n        <h1 className='signup__header'>Create an account today!</h1>\n        <form className='signup__form' onSubmit={handleSubmit}>\n            <ul>\n                {errors.map((error, idx) => <li className='signup__error' key={idx}>{error}</li>)}\n            </ul>\n        <input\n                    type=\"text\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                    placeholder='Email'\n                    />\n        <input\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                    placeholder='Username'\n                    />       \n        <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    placeholder='Password'\n                    />\n        <input\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                    placeholder='Confirm Password'\n                    />\n            <Button className='signup__submit' type=\"submit\">Let's roll!</Button>\n            <Link to='/' className='signup__cancel'>Cancel</Link>\n        </form>\n    </Container>\n    );\n}\n\nexport default SignupFormPage;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./components/Home\";\nimport { Navigation } from \"./components/Navigation\";\nimport { ProductList } from \"./components/ProductList\";\nimport SignupFormPage from \"./components/SignupFormPage\";\nimport * as sessionActions from \"./store/session\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return isLoaded && (\n    <>\n      <Navigation isLoaded={isLoaded} />\n        <Switch>\n          <Route path='/' exact>\n            <Home />\n          </Route>\n          <Route path='/signup'>\n            <SignupFormPage />\n          </Route>\n        </Switch>\n      </>\n  );\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sessionReducer from './session';\n\n\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport { restoreCSRF, fetch } from './store/csrf';\nimport * as sessionActions from './store/session';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './scss/custom.scss'\nimport { ModalProvider } from './context/Modal';\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  restoreCSRF();\n\n  window.csrfFetch = fetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n\n}\n\nfunction Root() {\n  return (\n    <ReduxProvider store={store}>\n      <ModalProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ModalProvider>\n    </ReduxProvider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}