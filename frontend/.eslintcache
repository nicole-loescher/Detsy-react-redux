[{"/Users/nicolelolo/Desktop/authenticate-me/frontend/src/index.js":"1","/Users/nicolelolo/Desktop/authenticate-me/frontend/src/App.js":"2","/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/index.js":"3","/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/csrf.js":"4","/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/session.js":"5","/Users/nicolelolo/Desktop/authenticate-me/frontend/src/components/LoginFormPage/index.js":"6","/Users/nicolelolo/Desktop/authenticate-me/frontend/src/components/SignupFormPage/index.js":"7"},{"size":889,"mtime":1611508981533,"results":"8","hashOfConfig":"9"},{"size":743,"mtime":1611511166704,"results":"10","hashOfConfig":"9"},{"size":676,"mtime":1611456964841,"results":"11","hashOfConfig":"9"},{"size":784,"mtime":1611434454196,"results":"12","hashOfConfig":"9"},{"size":1729,"mtime":1611510841850,"results":"13","hashOfConfig":"9"},{"size":1752,"mtime":1611507956113,"results":"14","hashOfConfig":"9"},{"size":2482,"mtime":1611511070112,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1c78gz2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nicolelolo/Desktop/authenticate-me/frontend/src/index.js",[],["32","33"],"/Users/nicolelolo/Desktop/authenticate-me/frontend/src/App.js",[],"/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/index.js",[],"/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/csrf.js",[],"/Users/nicolelolo/Desktop/authenticate-me/frontend/src/store/session.js",["34"],"import { fetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n    return {\n        type: SET_USER,\n        payload: user,\n    };\n};\n\nconst removeUser = () => {\n    return {\n        type: REMOVE_USER,\n    };\n};\n\nexport const login = (user) => async (dispatch) => {\n    const { credential, password } = user;\n    const response = await fetch('/api/session', {\n        method: 'POST',\n        body: JSON.stringify({\n            credential,\n            password,\n        }),\n    });\n    dispatch(setUser(response.data.user));\n    return response;\n};\n\nexport const restoreUser = () => async dispatch => {\n    const response = await fetch('/api/session')\n    dispatch(setUser(response.data.user))\n    return response;\n};\nexport const signup = (user) => async dispatch => {\n    const { username, email, password } = user;\n    const response = await fetch('/api/users', {\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username,\n            email,\n            password\n        })\n    })\n    dispatch(setUser(response.data.user));\n    return response;\n}\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case SET_USER:\n            newState = Object.assign({}, state);\n            newState.user = action.payload;\n            return newState;\n        case REMOVE_USER:\n            newState = Object.assign({}, state);\n            newState.user = null;\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default sessionReducer;","/Users/nicolelolo/Desktop/authenticate-me/frontend/src/components/LoginFormPage/index.js",[],"/Users/nicolelolo/Desktop/authenticate-me/frontend/src/components/SignupFormPage/index.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":13,"column":7,"nodeType":"41","messageId":"42","endLine":13,"endColumn":17},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'removeUser' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]